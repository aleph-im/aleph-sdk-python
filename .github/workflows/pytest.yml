name: Test/Coverage with Python

on:
  push:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '4 0 * * *'

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
        os: [ubuntu-22.04, ubuntu-24.04, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip libsodium-dev
        if: runner.os == 'Linux'

      - run: |
          python3 -m venv /tmp/venv
          /tmp/venv/bin/python -m pip install --upgrade pip hatch coverage
        if: runner.os == 'Linux'
      
      - run: |
          python -m venv /tmp/venv
          /tmp/venv/Scripts/python -m pip install --upgrade pip hatch coverage
        if: runner.os == 'Windows'

      - run: choco install pkgconfiglite
        if: runner.os == 'Windows'

      - name: Set up vcpkg
        uses: lukka/get-vcpkg@v12
        with:
          vcpkgGitCommitId: 'latest'
        if: runner.os == 'Windows'

      - name: Install GMP
        run: vcpkg install gmp
        if: runner.os == 'Windows'

      - name: Build project
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
        if: runner.os == 'Windows'
      
      - run: |
          /tmp/venv/bin/pip freeze
          /tmp/venv/bin/hatch run testing:pip freeze
          /tmp/venv/bin/hatch run testing:test
        if: runner.os == 'Linux'
      
      - run: |
          /tmp/venv/Scripts/pip freeze
          /tmp/venv/Scripts/hatch run testing:pip freeze
          /tmp/venv/Scripts/hatch run testing:test
        if: runner.os == 'Windows'

      - run: /tmp/venv/bin/hatch run testing:cov
        if: runner.os == 'Linux'

      - run: /tmp/venv/Scripts/hatch run testing:cov
        if: runner.os == 'Windows'

      - uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: aleph-im/aleph-sdk-python
